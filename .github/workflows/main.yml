name: CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Lazarus
      uses: gcarreno/setup-lazarus@v3.0.16
      with:
        lazarus-version: stable
    - run: .github/download-dependencies.sh && .github/setup-fpc-cfg.sh 
    - run: lazbuild --add-package internettools/internettools.lpk
    - run: ./manage.sh linux64
    - name: Test Xidel
      run: bash ./tests/tests.sh
    - name: 'Upload '
      uses: actions/upload-artifact@v3
      with:
        name: xidel.linux64
        path: xidelpackage/*
    - name: 'Upload '
      uses: actions/upload-artifact@v3
      with:
        name: xidel.linux64.deb
        path: xidel*.deb
    - name: 'Cross compile FreePascal'
      run: |
        sudo apt install libc6-dev-i386-cross binutils-i686-linux-gnu libc6-dev-armel-cross binutils-arm-linux-gnueabi libc6-dev-arm64-cross binutils-aarch64-linux-gnu
        dpkg -L libc6-dev-i386-cross binutils-i686-linux-gnu libc6-dev-armel-cross binutils-arm-linux-gnueabi libc6-dev-arm64-cross binutils-aarch64-linux-gnu
        cd /usr/share/fpcsrc/3.2*/
        localcompiler=/usr/bin/fpc
        sudo make crossinstall OS_TARGET=linux CPU_TARGET=i386 PP=$localcompiler 
        sudo make crossinstall OS_TARGET=linux CPU_TARGET=arm PP=$localcompiler
        sudo make crossinstall OS_TARGET=linux CPU_TARGET=aarch64 PP=$localcompiler 
    - name: 'Cross compile Xidel 32-Bit'
      run: ./manage.sh linux32
    - name: 'Upload '
      uses: actions/upload-artifact@v3
      with:
        name: xidel.linux32
        path: xidelpackage/*
    - name: 'Upload '
      uses: actions/upload-artifact@v3
      with:
        name: xidel.linux32.deb
        path: xidel*.deb
    - name: 'Cross compile Xidel ARM'
      run: ./manage.sh linuxarm
    - name: 'Upload '
      uses: actions/upload-artifact@v3
      with:
        name: xidel.linuxarm
        path: xidelpackage/*
    - name: 'Cross compile Xidel AARCH64' 
      run: ./manage.sh linuxarm64
    - name: 'Upload '
      uses: actions/upload-artifact@v3
      with:
        name: xidel.linuxarm64
        path: xidelpackage/*

      
 
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Lazarus
      uses: gcarreno/setup-lazarus@v3.0.16
      with:
        lazarus-version: stable
    - run: . .github/download-dependencies.sh && . .github/setup-fpc-cfg.sh "D:/a/_temp/lazarus/fpc/3.2.2/bin/x86_64-win64/fpc.cfg" "D:/a/xidel/xidel/"
      shell: bash
    - run: lazbuild --add-package internettools/internettools.lpk
    - run: bash ./manage.sh win64
#    - name: Test Xidel 64
#      run: bash ./tests/tests.sh
    - name: 'Upload '
      uses: actions/upload-artifact@v3
      with:
        name: xidel.win64
        path: xidelpackage/*
#    - run: bash ./manage.sh win32
#    - name: Test Xidel 32
#      run: ./tests/tests.sh
#      shell: bash
#    - name: 'Upload '
#      uses: actions/upload-artifact@v3
#      with:
#        name: xidel.win32
#        path: xidelpackage/*
